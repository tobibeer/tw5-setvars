created: 20151209131525981
creator: Tobias Beer
modified: 20151209145558436
tags: 
title: setvars-Syntax
type: text/vnd.tiddlywiki

Using the ''setvars'' widget is straight forward. For each desired variable, simply declare:

; 1. A Variable Declaration
: specify which attributes and literals make up the variable:<br>`foo="bar baz"`
: may contain literals enclosed in backslashes<br>`foo="bar \I will be a literal\ baz"`
; 2. The Variable Attributes
: prefixed with an underscore `_` and eventually replaced in the variable declaration:<br>`_bar="hello" _baz={{!!title}}`

All put together, this is the result of it:

<$macrocall $name="`" text="""<$setvars foo="bar \ \ baz" _bar="hello" _baz={{!!title}}>
<<foo>>
</$setvars>
"""/>

!! Variable Declaration

You can use the following constructs in the variable declaration:

; \ text \
: returns the literal ` text `, with leading and trailing white-space
; foo
: refers to the attribute ''_foo'' and its value
; [foo]
: evaluates ''_foo'' as a filter expression
; foo[1]
: parses''_foo'' as a list and returns the first item
; [foo[1]]
: evaluates ''_foo'' as a filter and returns the first item
; foo[2]
: returns only the second item
; foo[2][fallback]
: returns the second item or `fallback` if that is undefined
; [foo[3][empty]]
: evaluates as a filter and returns the third item or `empty` if undefined
; foo[n]
: parses''_foo'' as a list and returns the last item, as does ''foo[-1]''
; [foo[n]]
: evaluates ''_foo'' as a filter and returns the last item, as does ...you guessed right
; foo[2,3]
: returns 3 items, starting from the second
; foo[n,-2]
: returns 2 items, starting from the last, going backwards
:: the last two items, so to speak
; foo[-3]
: returns the third last item
; [foo[-3,2]]
: evaluates as a filter and returns two items, starting with the third last item
; foo[-3,-2]
: returns two items, starting with the third last item, going backwards
; foo[-3,n]
: returns however many items there are from the third last to the end
; foo[-3,-n]
: returns however many items there are from the first to the third last
; foo[3,-n]
: is actually the same as ''foo[1,3]''
; foo[-n]
: don't be weird, just use ''foo[1]''